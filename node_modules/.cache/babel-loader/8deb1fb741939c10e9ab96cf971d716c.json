{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\pages\\\\Posts.jsx\";\nimport React from \"react\";\nimport { Avatar, Tag, Switch, Form } from \"antd\";\nimport { IMG_BASE_URL } from \"@/config/serverApiConfig\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport CrudModule from \"@/modules/CrudModule\";\nimport UserForm from \"@/forms/UserForm\";\nimport { formatDatetime } from \"@/utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  const entity = \"posts\";\n\n  const getColor = type => {\n    if (type) {\n      switch (type) {\n        case \"active\":\n        case \"Đang hoạt động\":\n          return \"#87d068\";\n\n        case \"inactive\":\n        case \"Bị khóa\":\n          return \"red\";\n      }\n    }\n\n    return \"#87d068\";\n  };\n\n  const checkValue = value => {\n    if (value) {\n      switch (value) {\n        case 1:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  const panelTitle = \"Customer Panel\";\n  const dataTableTitle = \"Customers Lists\";\n  const entityDisplayLabels = [\"company\"];\n  const readColumns = [];\n  const dataTableColumns = [{\n    title: \"Ảnh đại diện\",\n    dataIndex: \"anh_dai_dien\",\n    render: anh_dai_dien => {\n      return /*#__PURE__*/_jsxDEV(Avatar, {\n        style: {\n          float: \"left\"\n        },\n        src: IMG_BASE_URL + anh_dai_dien,\n        shape: \"square\",\n        size: 60,\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Tiêu đề\",\n    dataIndex: \"tieu_de\",\n    sorter: {\n      compare: (a, b) => a.tieu_de.localeCompare(b.tieu_de),\n      multiple: 2\n    }\n  }, {\n    title: \"Nhóm bài viết\",\n    dataIndex: \"nhom_tin_tuc_id\",\n    render: nhom_nhan_vien => {\n      return nhom_nhan_vien;\n    },\n    ellipsis: true\n  }, {\n    title: \"Tin nổi bật\",\n    dataIndex: \"tin_noi_bat\",\n    render: tin_noi_bat => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"c\\xF3\",\n        unCheckedChildren: \"kh\\xF4ng\",\n        defaultChecked: checkValue(tin_noi_bat)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }, this);\n    },\n    sorter: {\n      compare: (a, b) => {\n        return a.tin_noi_bat.localeCompare(b.tin_noi_bat);\n      },\n      multiple: 1\n    },\n    ellipsis: true\n  }, {\n    title: \"Tin mới\",\n    dataIndex: \"tin_moi\",\n    render: tin_moi => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"c\\xF3\",\n        unCheckedChildren: \"kh\\xF4ng\",\n        defaultChecked: checkValue(tin_moi)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this);\n    },\n    sorter: {\n      compare: (a, b) => {\n        return a.tin_moi.localeCompare(b.tin_moi);\n      },\n      multiple: 3\n    },\n    ellipsis: true\n  }, {\n    title: \"Trạng thái\",\n    dataIndex: \"trang_thai\",\n    render: trang_thai => {\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: getColor(trang_thai),\n        children: trang_thai == \"active\" || trang_thai == \"Đang hoạt động\" ? \"Đang hoạt động\" : \"Bị khóa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this);\n    },\n    sorter: {\n      compare: (a, b) => {\n        return a.trang_thai.localeCompare(b.trang_thai);\n      },\n      multiple: 4\n    }\n  }, {\n    title: \"Ngày tạo\",\n    dataIndex: \"ngay_tao\",\n    render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        wordWrap: \"break-word\",\n        wordBreak: \"break-word\"\n      },\n      children: formatDatetime(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this),\n    ellipsis: true,\n    sorter: {\n      compare: (a, b) => {\n        return a.ngay_tao.localeCompare(b.ngay_tao);\n      },\n      multiple: 5\n    }\n  }];\n  const ADD_NEW_ENTITY = \"Add new customer\";\n  const DATATABLE_TITLE = \"customers List\";\n  const ENTITY_NAME = \"customer\";\n  const CREATE_ENTITY = \"Create customer\";\n  const UPDATE_ENTITY = \"Update customer\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    entityDisplayLabels\n  };\n  return /*#__PURE__*/_jsxDEV(CrudModule, {\n    createForm: /*#__PURE__*/_jsxDEV(UserForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }, this),\n    updateForm: /*#__PURE__*/_jsxDEV(UserForm, {\n      isUpdateForm: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }, this),\n    config: config\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Avatar","Tag","Switch","Form","IMG_BASE_URL","UserOutlined","CrudModule","UserForm","formatDatetime","Posts","entity","getColor","type","checkValue","value","panelTitle","dataTableTitle","entityDisplayLabels","readColumns","dataTableColumns","title","dataIndex","render","anh_dai_dien","float","sorter","compare","a","b","tieu_de","localeCompare","multiple","nhom_nhan_vien","ellipsis","tin_noi_bat","tin_moi","trang_thai","date","wordWrap","wordBreak","ngay_tao","ADD_NEW_ENTITY","DATATABLE_TITLE","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","config"],"sources":["D:/mock-reactjs/frontend-new/src/pages/Posts.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Avatar, Tag, Switch, Form } from \"antd\";\r\nimport { IMG_BASE_URL } from \"@/config/serverApiConfig\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport CrudModule from \"@/modules/CrudModule\";\r\nimport UserForm from \"@/forms/UserForm\";\r\nimport { formatDatetime } from \"@/utils/helpers\";\r\n\r\nfunction Posts() {\r\n  const entity = \"posts\";\r\n  const getColor = (type) => {\r\n    if(type) {\r\n      switch(type) {\r\n        case \"active\": \r\n        case \"Đang hoạt động\":\r\n          return \"#87d068\";\r\n        case \"inactive\": \r\n        case \"Bị khóa\":\r\n          return \"red\";          \r\n      }\r\n    }\r\n    return \"#87d068\";\r\n  }\r\n  const checkValue = (value) => {\r\n    if(value) {\r\n      switch(value) {\r\n        case 1: \r\n          return true;\r\n        default:\r\n          return false;          \r\n      }\r\n    }\r\n    return false;  \r\n  }\r\n  const panelTitle = \"Customer Panel\";\r\n  const dataTableTitle = \"Customers Lists\";\r\n  const entityDisplayLabels = [\"company\"];\r\n\r\n  const readColumns = [];\r\n  const dataTableColumns = [\r\n    {\r\n      title: \"Ảnh đại diện\",\r\n      dataIndex: \"anh_dai_dien\",\r\n      render: (anh_dai_dien) => {\r\n        return (\r\n          <Avatar\r\n            style={{ float: \"left\" }}\r\n            src={IMG_BASE_URL + anh_dai_dien}\r\n            shape=\"square\"\r\n            size={60}\r\n            icon={<UserOutlined />}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Tiêu đề\",\r\n      dataIndex: \"tieu_de\",\r\n      sorter: {\r\n        compare: (a, b) => a.tieu_de.localeCompare(b.tieu_de),\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      title: \"Nhóm bài viết\",\r\n      dataIndex: \"nhom_tin_tuc_id\",\r\n      render: (nhom_nhan_vien) => {\r\n       return nhom_nhan_vien;\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Tin nổi bật\",\r\n      dataIndex: \"tin_noi_bat\",\r\n      render: (tin_noi_bat) => {\r\n        return <Switch checkedChildren=\"có\" unCheckedChildren=\"không\" defaultChecked={checkValue(tin_noi_bat)}/>;\r\n       },\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.tin_noi_bat.localeCompare(b.tin_noi_bat);\r\n        },\r\n        multiple: 1,\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Tin mới\",\r\n      dataIndex: \"tin_moi\",\r\n      render: (tin_moi) => {\r\n        return <Switch checkedChildren=\"có\" unCheckedChildren=\"không\" defaultChecked={checkValue(tin_moi)}/>;\r\n       },\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.tin_moi.localeCompare(b.tin_moi);\r\n        },\r\n        multiple: 3,\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"trang_thai\",\r\n      render: (trang_thai) => {\r\n        return <Tag color={getColor(trang_thai)}>{(trang_thai == \"active\" || trang_thai == \"Đang hoạt động\") ? \"Đang hoạt động\" : \"Bị khóa\"}</Tag>;\r\n       },\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.trang_thai.localeCompare(b.trang_thai);\r\n        },\r\n        multiple: 4,\r\n      },\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"ngay_tao\",\r\n      render: (date) => (\r\n        <span style={{ wordWrap: \"break-word\", wordBreak: \"break-word\" }}>\r\n          {formatDatetime(date)}\r\n        </span>\r\n      ),\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.ngay_tao.localeCompare(b.ngay_tao);\r\n        },\r\n        multiple: 5,\r\n      },\r\n    },\r\n    ];\r\n\r\n  const ADD_NEW_ENTITY = \"Add new customer\";\r\n  const DATATABLE_TITLE = \"customers List\";\r\n  const ENTITY_NAME = \"customer\";\r\n  const CREATE_ENTITY = \"Create customer\";\r\n  const UPDATE_ENTITY = \"Update customer\";\r\n  const config = {\r\n    entity,\r\n    panelTitle,\r\n    dataTableTitle,\r\n    ENTITY_NAME,\r\n    CREATE_ENTITY,\r\n    ADD_NEW_ENTITY,\r\n    UPDATE_ENTITY,\r\n    DATATABLE_TITLE,\r\n    readColumns,\r\n    dataTableColumns,\r\n    entityDisplayLabels,\r\n  };\r\n  return (\r\n    <CrudModule\r\n      createForm={<UserForm />}\r\n      updateForm={<UserForm isUpdateForm={true} />}\r\n      config={config}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}