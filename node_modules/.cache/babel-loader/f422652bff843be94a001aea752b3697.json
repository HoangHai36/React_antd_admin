{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\nexport const login = loginAdminData => async dispatch => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: {\n      loading: true\n    }\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.data,\n      loading: false,\n      isLoggedIn: true\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.data\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data\n    });\n  }\n};\nexport const register = loginAdminData => async dispatch => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: {\n      loading: true\n    }\n  });\n  const data = await authService.register(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.data,\n      loading: false,\n      isLoggedIn: true\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.data\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS\n  });\n  history.push(\"/login\");\n};","map":{"version":3,"names":["actionTypes","authService","storePersist","history","login","loginAdminData","dispatch","type","LOADING_REQUEST","payload","loading","data","success","authValue","current","isLoggedIn","set","LOGIN_SUCCESS","push","FAILED_REQUEST","register","logout","LOGOUT_SUCCESS"],"sources":["D:/mock-reactjs/frontend-new/src/redux/auth/actions.js"],"sourcesContent":["import * as actionTypes from \"./types\";\r\nimport * as authService from \"@/auth\";\r\nimport storePersist from \"@/redux/storePersist\";\r\nimport history from \"@/utils/history\";\r\n\r\nexport const login = (loginAdminData) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.LOADING_REQUEST,\r\n    payload: { loading: true },\r\n  });\r\n  const data = await authService.login(loginAdminData);\r\n\r\n  if (data.success === true) {\r\n    const authValue = {\r\n      current: data.data,\r\n      loading: false,\r\n      isLoggedIn: true,\r\n    };\r\n    storePersist.set(\"auth\", authValue);\r\n    dispatch({\r\n      type: actionTypes.LOGIN_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n    history.push(\"/\");\r\n  } else {\r\n    dispatch({\r\n      type: actionTypes.FAILED_REQUEST,\r\n      payload: data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (loginAdminData) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.LOADING_REQUEST,\r\n    payload: { loading: true },\r\n  });\r\n  const data = await authService.register(loginAdminData);\r\n\r\n  if (data.success === true) {\r\n    const authValue = {\r\n      current: data.data,\r\n      loading: false,\r\n      isLoggedIn: true,\r\n    };\r\n    storePersist.set(\"auth\", authValue);\r\n    dispatch({\r\n      type: actionTypes.LOGIN_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n    history.push(\"/\");\r\n  } else {\r\n    dispatch({\r\n      type: actionTypes.FAILED_REQUEST,\r\n      payload: data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  authService.logout();\r\n  dispatch({\r\n    type: actionTypes.LOGOUT_SUCCESS,\r\n  });\r\n  history.push(\"/login\");\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,QAA7B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,KAAK,GAAIC,cAAD,IAAoB,MAAOC,QAAP,IAAoB;EAC3DA,QAAQ,CAAC;IACPC,IAAI,EAAEP,WAAW,CAACQ,eADX;IAEPC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAX;EAFF,CAAD,CAAR;EAIA,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAACG,KAAZ,CAAkBC,cAAlB,CAAnB;;EAEA,IAAIM,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;IACzB,MAAMC,SAAS,GAAG;MAChBC,OAAO,EAAEH,IAAI,CAACA,IADE;MAEhBD,OAAO,EAAE,KAFO;MAGhBK,UAAU,EAAE;IAHI,CAAlB;IAKAb,YAAY,CAACc,GAAb,CAAiB,MAAjB,EAAyBH,SAAzB;IACAP,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACiB,aADX;MAEPR,OAAO,EAAEE,IAAI,CAACA;IAFP,CAAD,CAAR;IAIAR,OAAO,CAACe,IAAR,CAAa,GAAb;EACD,CAZD,MAYO;IACLZ,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACmB,cADX;MAEPV,OAAO,EAAEE;IAFF,CAAD,CAAR;EAID;AACF,CAzBM;AA2BP,OAAO,MAAMS,QAAQ,GAAIf,cAAD,IAAoB,MAAOC,QAAP,IAAoB;EAC9DA,QAAQ,CAAC;IACPC,IAAI,EAAEP,WAAW,CAACQ,eADX;IAEPC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAX;EAFF,CAAD,CAAR;EAIA,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAACmB,QAAZ,CAAqBf,cAArB,CAAnB;;EAEA,IAAIM,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;IACzB,MAAMC,SAAS,GAAG;MAChBC,OAAO,EAAEH,IAAI,CAACA,IADE;MAEhBD,OAAO,EAAE,KAFO;MAGhBK,UAAU,EAAE;IAHI,CAAlB;IAKAb,YAAY,CAACc,GAAb,CAAiB,MAAjB,EAAyBH,SAAzB;IACAP,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACiB,aADX;MAEPR,OAAO,EAAEE,IAAI,CAACA;IAFP,CAAD,CAAR;IAIAR,OAAO,CAACe,IAAR,CAAa,GAAb;EACD,CAZD,MAYO;IACLZ,QAAQ,CAAC;MACPC,IAAI,EAAEP,WAAW,CAACmB,cADX;MAEPV,OAAO,EAAEE;IAFF,CAAD,CAAR;EAID;AACF,CAzBM;AA2BP,OAAO,MAAMU,MAAM,GAAG,MAAM,MAAOf,QAAP,IAAoB;EAC9CL,WAAW,CAACoB,MAAZ;EACAf,QAAQ,CAAC;IACPC,IAAI,EAAEP,WAAW,CAACsB;EADX,CAAD,CAAR;EAGAnB,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,CANM"},"metadata":{},"sourceType":"module"}