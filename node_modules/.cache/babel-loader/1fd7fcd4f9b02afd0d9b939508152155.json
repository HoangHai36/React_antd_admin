{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\DeleteModal\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteModal(_ref) {\n  _s();\n\n  let {\n    config\n  } = _ref;\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\"\n  } = config;\n  const dispatch = useDispatch();\n  const {\n    current,\n    isLoading,\n    isSuccess\n  } = useSelector(selectDeletedItem);\n  const {\n    state,\n    crudContextAction\n  } = useCrudContext();\n  const {\n    isModalOpen\n  } = state;\n  const {\n    modal\n  } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n\n    if (current) {\n      let labels = entityDisplayLabels.map(x => valueByString(current, x)).join(\" \");\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: modalTitle,\n    visible: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    confirmLoading: isLoading,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [deleteMessage, displayItem]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteModal, \"l/fpjjMx5KOA8klHnr2zUx0U/GM=\", false, function () {\n  return [useDispatch, useSelector, useCrudContext];\n});\n\n_c = DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"names":["React","useEffect","useState","Modal","useDispatch","useSelector","crud","useCrudContext","selectDeletedItem","valueByString","DeleteModal","config","entity","entityDisplayLabels","deleteMessage","modalTitle","dispatch","current","isLoading","isSuccess","state","crudContextAction","isModalOpen","modal","displayItem","setDisplayItem","close","list","resetAction","labels","map","x","join","handleOk","id","_id","delete","handleCancel"],"sources":["D:/mock-reactjs/frontend-new/src/components/DeleteModal/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\r\nimport { valueByString } from \"@/utils/helpers\";\r\n\r\nexport default function DeleteModal({ config }) {\r\n  let {\r\n    entity,\r\n    entityDisplayLabels,\r\n    deleteMessage = \"Do you want delete : \",\r\n    modalTitle = \"Remove Item\",\r\n  } = config;\r\n  const dispatch = useDispatch();\r\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\r\n  const { state, crudContextAction } = useCrudContext();\r\n  const { isModalOpen } = state;\r\n  const { modal } = crudContextAction;\r\n  const [displayItem, setDisplayItem] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      modal.close();\r\n      dispatch(crud.list(entity));\r\n      dispatch(crud.resetAction(entity));\r\n    }\r\n    if (current) {\r\n      let labels = entityDisplayLabels\r\n        .map((x) => valueByString(current, x))\r\n        .join(\" \");\r\n\r\n      setDisplayItem(labels);\r\n    }\r\n  }, [isSuccess, current]);\r\n\r\n  const handleOk = () => {\r\n    const id = current._id;\r\n    dispatch(crud.delete(entity, id));\r\n  };\r\n  const handleCancel = () => {\r\n    if (!isLoading) modal.close();\r\n  };\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={isModalOpen}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      confirmLoading={isLoading}\r\n    >\r\n      <p>\r\n        {deleteMessage}\r\n        {displayItem}\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,eAAe,SAASC,WAAT,OAAiC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC9C,IAAI;IACFC,MADE;IAEFC,mBAFE;IAGFC,aAAa,GAAG,uBAHd;IAIFC,UAAU,GAAG;EAJX,IAKAJ,MALJ;EAMA,MAAMK,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM;IAAEa,OAAF;IAAWC,SAAX;IAAsBC;EAAtB,IAAoCd,WAAW,CAACG,iBAAD,CAArD;EACA,MAAM;IAAEY,KAAF;IAASC;EAAT,IAA+Bd,cAAc,EAAnD;EACA,MAAM;IAAEe;EAAF,IAAkBF,KAAxB;EACA,MAAM;IAAEG;EAAF,IAAYF,iBAAlB;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIkB,SAAJ,EAAe;MACbI,KAAK,CAACG,KAAN;MACAV,QAAQ,CAACV,IAAI,CAACqB,IAAL,CAAUf,MAAV,CAAD,CAAR;MACAI,QAAQ,CAACV,IAAI,CAACsB,WAAL,CAAiBhB,MAAjB,CAAD,CAAR;IACD;;IACD,IAAIK,OAAJ,EAAa;MACX,IAAIY,MAAM,GAAGhB,mBAAmB,CAC7BiB,GADU,CACLC,CAAD,IAAOtB,aAAa,CAACQ,OAAD,EAAUc,CAAV,CADd,EAEVC,IAFU,CAEL,GAFK,CAAb;MAIAP,cAAc,CAACI,MAAD,CAAd;IACD;EACF,CAbQ,EAaN,CAACV,SAAD,EAAYF,OAAZ,CAbM,CAAT;;EAeA,MAAMgB,QAAQ,GAAG,MAAM;IACrB,MAAMC,EAAE,GAAGjB,OAAO,CAACkB,GAAnB;IACAnB,QAAQ,CAACV,IAAI,CAAC8B,MAAL,CAAYxB,MAAZ,EAAoBsB,EAApB,CAAD,CAAR;EACD,CAHD;;EAIA,MAAMG,YAAY,GAAG,MAAM;IACzB,IAAI,CAACnB,SAAL,EAAgBK,KAAK,CAACG,KAAN;EACjB,CAFD;;EAGA,oBACE,QAAC,KAAD;IACE,KAAK,EAAEX,UADT;IAEE,OAAO,EAAEO,WAFX;IAGE,IAAI,EAAEW,QAHR;IAIE,QAAQ,EAAEI,YAJZ;IAKE,cAAc,EAAEnB,SALlB;IAAA,uBAOE;MAAA,WACGJ,aADH,EAEGU,WAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAlDuBd,W;UAOLN,W,EACyBC,W,EACLE,c;;;KATfG,W"},"metadata":{},"sourceType":"module"}