{"ast":null,"code":"import * as actionTypes from \"./types\";\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false\n};\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return { ...state,\n        isModalOpen: true\n      };\n\n    case actionTypes.CLOSE_MODAL:\n      return { ...state,\n        isModalOpen: false\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return { ...state,\n        isPanelCollapsed: false\n      };\n\n    case actionTypes.CLOSE_PANEL:\n      return { ...state,\n        isPanelCollapsed: true\n      };\n\n    case actionTypes.COLLAPSE_PANEL:\n      return { ...state,\n        isPanelCollapsed: !state.isPanelCollapsed\n      };\n\n    case actionTypes.OPEN_BOX:\n      return { ...state,\n        isBoxCollapsed: true\n      };\n\n    case actionTypes.CLOSE_BOX:\n      return { ...state,\n        isBoxCollapsed: false\n      };\n\n    case actionTypes.COLLAPSE_BOX:\n      return { ...state,\n        isBoxCollapsed: !state.isBoxCollapsed\n      };\n\n    case actionTypes.OPEN_READ_BOX:\n      return { ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_READ_BOX:\n      return { ...state,\n        isReadBoxOpen: false\n      };\n\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return { ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return { ...state,\n        isAdvancedBoxOpen: false\n      };\n\n    case actionTypes.OPEN_EDIT_BOX:\n      return { ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true\n      };\n\n    case actionTypes.CLOSE_EDIT_BOX:\n      return { ...state,\n        isEditBoxOpen: false\n      };\n\n    case actionTypes.COLLAPSE_READ_BOX:\n      return { ...state,\n        isReadBoxOpen: !state.isReadBoxOpen\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}","map":{"version":3,"names":["actionTypes","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","OPEN_MODAL","CLOSE_MODAL","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","COLLAPSE_READ_BOX","Error"],"sources":["D:/mock-reactjs/frontend-new/src/context/crud/reducer.jsx"],"sourcesContent":["import * as actionTypes from \"./types\";\r\n\r\nexport const initialState = {\r\n  isModalOpen: false,\r\n  isPanelCollapsed: false,\r\n  isBoxCollapsed: false,\r\n  isReadBoxOpen: true,\r\n  isAdvancedBoxOpen: false,\r\n  isEditBoxOpen: false,\r\n};\r\n\r\nexport function contextReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n      };\r\n\r\n    case actionTypes.OPEN_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: false,\r\n      };\r\n    case actionTypes.CLOSE_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: true,\r\n      };\r\n    case actionTypes.COLLAPSE_PANEL:\r\n      return {\r\n        ...state,\r\n        isPanelCollapsed: !state.isPanelCollapsed,\r\n      };\r\n    case actionTypes.OPEN_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: true,\r\n      };\r\n    case actionTypes.CLOSE_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: false,\r\n      };\r\n    case actionTypes.COLLAPSE_BOX:\r\n      return {\r\n        ...state,\r\n        isBoxCollapsed: !state.isBoxCollapsed,\r\n      };\r\n    case actionTypes.OPEN_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isAdvancedBoxOpen: false,\r\n        isEditBoxOpen: false,\r\n        isReadBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n      };\r\n    case actionTypes.OPEN_ADVANCED_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n        isEditBoxOpen: false,\r\n        isAdvancedBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_ADVANCED_BOX:\r\n      return {\r\n        ...state,\r\n        isAdvancedBoxOpen: false,\r\n      };\r\n    case actionTypes.OPEN_EDIT_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: false,\r\n        isAdvancedBoxOpen: false,\r\n        isEditBoxOpen: true,\r\n      };\r\n    case actionTypes.CLOSE_EDIT_BOX:\r\n      return {\r\n        ...state,\r\n        isEditBoxOpen: false,\r\n      };\r\n    case actionTypes.COLLAPSE_READ_BOX:\r\n      return {\r\n        ...state,\r\n        isReadBoxOpen: !state.isReadBoxOpen,\r\n      };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,WAAW,EAAE,KADa;EAE1BC,gBAAgB,EAAE,KAFQ;EAG1BC,cAAc,EAAE,KAHU;EAI1BC,aAAa,EAAE,IAJW;EAK1BC,iBAAiB,EAAE,KALO;EAM1BC,aAAa,EAAE;AANW,CAArB;AASP,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;EAC5C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKX,WAAW,CAACY,UAAjB;MACE,OAAO,EACL,GAAGH,KADE;QAELP,WAAW,EAAE;MAFR,CAAP;;IAIF,KAAKF,WAAW,CAACa,WAAjB;MACE,OAAO,EACL,GAAGJ,KADE;QAELP,WAAW,EAAE;MAFR,CAAP;;IAKF,KAAKF,WAAW,CAACc,UAAjB;MACE,OAAO,EACL,GAAGL,KADE;QAELN,gBAAgB,EAAE;MAFb,CAAP;;IAIF,KAAKH,WAAW,CAACe,WAAjB;MACE,OAAO,EACL,GAAGN,KADE;QAELN,gBAAgB,EAAE;MAFb,CAAP;;IAIF,KAAKH,WAAW,CAACgB,cAAjB;MACE,OAAO,EACL,GAAGP,KADE;QAELN,gBAAgB,EAAE,CAACM,KAAK,CAACN;MAFpB,CAAP;;IAIF,KAAKH,WAAW,CAACiB,QAAjB;MACE,OAAO,EACL,GAAGR,KADE;QAELL,cAAc,EAAE;MAFX,CAAP;;IAIF,KAAKJ,WAAW,CAACkB,SAAjB;MACE,OAAO,EACL,GAAGT,KADE;QAELL,cAAc,EAAE;MAFX,CAAP;;IAIF,KAAKJ,WAAW,CAACmB,YAAjB;MACE,OAAO,EACL,GAAGV,KADE;QAELL,cAAc,EAAE,CAACK,KAAK,CAACL;MAFlB,CAAP;;IAIF,KAAKJ,WAAW,CAACoB,aAAjB;MACE,OAAO,EACL,GAAGX,KADE;QAELH,iBAAiB,EAAE,KAFd;QAGLC,aAAa,EAAE,KAHV;QAILF,aAAa,EAAE;MAJV,CAAP;;IAMF,KAAKL,WAAW,CAACqB,cAAjB;MACE,OAAO,EACL,GAAGZ,KADE;QAELJ,aAAa,EAAE;MAFV,CAAP;;IAIF,KAAKL,WAAW,CAACsB,iBAAjB;MACE,OAAO,EACL,GAAGb,KADE;QAELJ,aAAa,EAAE,KAFV;QAGLE,aAAa,EAAE,KAHV;QAILD,iBAAiB,EAAE;MAJd,CAAP;;IAMF,KAAKN,WAAW,CAACuB,kBAAjB;MACE,OAAO,EACL,GAAGd,KADE;QAELH,iBAAiB,EAAE;MAFd,CAAP;;IAIF,KAAKN,WAAW,CAACwB,aAAjB;MACE,OAAO,EACL,GAAGf,KADE;QAELJ,aAAa,EAAE,KAFV;QAGLC,iBAAiB,EAAE,KAHd;QAILC,aAAa,EAAE;MAJV,CAAP;;IAMF,KAAKP,WAAW,CAACyB,cAAjB;MACE,OAAO,EACL,GAAGhB,KADE;QAELF,aAAa,EAAE;MAFV,CAAP;;IAIF,KAAKP,WAAW,CAAC0B,iBAAjB;MACE,OAAO,EACL,GAAGjB,KADE;QAELJ,aAAa,EAAE,CAACI,KAAK,CAACJ;MAFjB,CAAP;;IAIF;MAAS;QACP,MAAM,IAAIsB,KAAJ,CAAW,0BAAyBjB,MAAM,CAACC,IAAK,EAAhD,CAAN;MACD;EArFH;AAuFD"},"metadata":{},"sourceType":"module"}