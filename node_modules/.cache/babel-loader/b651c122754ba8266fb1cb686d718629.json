{"ast":null,"code":"import * as actionTypes from \"./types\";\n\nconst contextActions = dispatch => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_MODAL\n        });\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_MODAL\n        });\n      }\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_ADVANCED_BOX\n        });\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_ADVANCED_BOX\n        });\n      }\n    },\n    editBox: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_EDIT_BOX\n        });\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_EDIT_BOX\n        });\n      }\n    },\n    panel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL\n        });\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_PANEL\n        });\n      },\n      collapse: () => {\n        dispatch({\n          type: actionTypes.COLLAPSE_PANEL\n        });\n      }\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_BOX\n        });\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_BOX\n        });\n      },\n      collapse: () => {\n        dispatch({\n          type: actionTypes.COLLAPSE_BOX\n        });\n      }\n    },\n    readBox: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_READ_BOX\n        });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({\n          type: actionTypes.CLOSE_READ_BOX\n        });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({\n          type: actionTypes.COLLAPSE_READ_BOX\n        });\n      }\n    }\n  };\n};\n\nexport default contextActions;","map":{"version":3,"names":["actionTypes","contextActions","dispatch","modal","open","type","OPEN_MODAL","close","CLOSE_MODAL","advancedBox","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","editBox","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","panel","OPEN_PANEL","CLOSE_PANEL","collapse","COLLAPSE_PANEL","collapsedBox","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","readBox","OPEN_READ_BOX","console","log","CLOSE_READ_BOX","COLLAPSE_READ_BOX"],"sources":["D:/mock-reactjs/frontend-new/src/context/crud/actions.jsx"],"sourcesContent":["import * as actionTypes from \"./types\";\r\n\r\nconst contextActions = (dispatch) => {\r\n  return {\r\n    modal: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_MODAL });\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_MODAL });\r\n      },\r\n    },\r\n    advancedBox: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\r\n      },\r\n    },\r\n    editBox: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\r\n      },\r\n    },\r\n    panel: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_PANEL });\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_PANEL });\r\n      },\r\n      collapse: () => {\r\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\r\n      },\r\n    },\r\n    collapsedBox: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_BOX });\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_BOX });\r\n      },\r\n      collapse: () => {\r\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\r\n      },\r\n    },\r\n    readBox: {\r\n      open: () => {\r\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\r\n        console.log(\"readBox open\");\r\n      },\r\n      close: () => {\r\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\r\n        console.log(\"readBox close\");\r\n      },\r\n      collapse: () => {\r\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default contextActions;\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;;AAEA,MAAMC,cAAc,GAAIC,QAAD,IAAc;EACnC,OAAO;IACLC,KAAK,EAAE;MACLC,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACM;QAApB,CAAD,CAAR;MACD,CAHI;MAILC,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACQ;QAApB,CAAD,CAAR;MACD;IANI,CADF;IASLC,WAAW,EAAE;MACXL,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACU;QAApB,CAAD,CAAR;MACD,CAHU;MAIXH,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACW;QAApB,CAAD,CAAR;MACD;IANU,CATR;IAiBLC,OAAO,EAAE;MACPR,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACa;QAApB,CAAD,CAAR;MACD,CAHM;MAIPN,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACc;QAApB,CAAD,CAAR;MACD;IANM,CAjBJ;IAyBLC,KAAK,EAAE;MACLX,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACgB;QAApB,CAAD,CAAR;MACD,CAHI;MAILT,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACiB;QAApB,CAAD,CAAR;MACD,CANI;MAOLC,QAAQ,EAAE,MAAM;QACdhB,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACmB;QAApB,CAAD,CAAR;MACD;IATI,CAzBF;IAoCLC,YAAY,EAAE;MACZhB,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACqB;QAApB,CAAD,CAAR;MACD,CAHW;MAIZd,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACsB;QAApB,CAAD,CAAR;MACD,CANW;MAOZJ,QAAQ,EAAE,MAAM;QACdhB,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACuB;QAApB,CAAD,CAAR;MACD;IATW,CApCT;IA+CLC,OAAO,EAAE;MACPpB,IAAI,EAAE,MAAM;QACVF,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAACyB;QAApB,CAAD,CAAR;QACAC,OAAO,CAACC,GAAR,CAAY,cAAZ;MACD,CAJM;MAKPpB,KAAK,EAAE,MAAM;QACXL,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAAC4B;QAApB,CAAD,CAAR;QACAF,OAAO,CAACC,GAAR,CAAY,eAAZ;MACD,CARM;MASPT,QAAQ,EAAE,MAAM;QACdhB,QAAQ,CAAC;UAAEG,IAAI,EAAEL,WAAW,CAAC6B;QAApB,CAAD,CAAR;MACD;IAXM;EA/CJ,CAAP;AA6DD,CA9DD;;AAgEA,eAAe5B,cAAf"},"metadata":{},"sourceType":"module"}