{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\UpdateForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectReadItem } from \"@/redux/crud/selectors\";\nimport { useParams } from 'react-router-dom';\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateForm(_ref) {\n  _s();\n\n  let {\n    config,\n    formElements\n  } = _ref;\n  let {\n    entity\n  } = config;\n  const dispatch = useDispatch();\n  const {\n    result,\n    isLoading,\n    isSuccess\n  } = useSelector(selectReadItem);\n  const [form] = Form.useForm();\n  const params = useParams();\n\n  const onSubmit = fieldsValue => {\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n\n  useEffect(() => {\n    console.log(result); // dispatch(crud.read('userItem', params?.id));\n\n    if (result) {\n      form.setFieldsValue(result);\n    }\n\n    console.log(form);\n  }, []);\n  useEffect(() => {\n    if (isSuccess) {\n      form.resetFields(); // dispatch(crud.resetAction(\"update\"));\n      // dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: isLoading,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: onSubmit,\n        children: [formElements, /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateForm, \"EzkJc+BR59P6DJuZwPTrh4R7zF0=\", false, function () {\n  return [useDispatch, useSelector, Form.useForm, useParams];\n});\n\n_c = UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["React","useEffect","dayjs","useDispatch","useSelector","crud","selectReadItem","useParams","Button","Form","Loading","UpdateForm","config","formElements","entity","dispatch","result","isLoading","isSuccess","form","useForm","params","onSubmit","fieldsValue","update","id","console","log","setFieldsValue","resetFields"],"sources":["D:/mock-reactjs/frontend-new/src/components/UpdateForm/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { selectReadItem } from \"@/redux/crud/selectors\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Form } from \"antd\";\r\nimport Loading from \"@/components/Loading\";\r\n\r\nexport default function UpdateForm({ config, formElements }) {\r\n  let { entity } = config;\r\n  const dispatch = useDispatch();\r\n  const { result, isLoading, isSuccess } = useSelector(selectReadItem);\r\n  const [form] = Form.useForm();\r\n  const params = useParams();\r\n  const onSubmit = (fieldsValue) => {\r\n    dispatch(crud.update(entity, id, fieldsValue));\r\n  };\r\n  useEffect(() => {\r\n    console.log(result)\r\n    // dispatch(crud.read('userItem', params?.id));\r\n    if(result) {\r\n      form.setFieldsValue(result);\r\n    }\r\n    console.log(form)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      form.resetFields();\r\n      // dispatch(crud.resetAction(\"update\"));\r\n      // dispatch(crud.list(entity));\r\n    }\r\n  }, [isSuccess]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Loading isLoading={isLoading}>\r\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n          {formElements}\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Loading>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,eAAe,SAASC,UAAT,OAA8C;EAAA;;EAAA,IAA1B;IAAEC,MAAF;IAAUC;EAAV,CAA0B;EAC3D,IAAI;IAAEC;EAAF,IAAaF,MAAjB;EACA,MAAMG,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM;IAAEa,MAAF;IAAUC,SAAV;IAAqBC;EAArB,IAAmCd,WAAW,CAACE,cAAD,CAApD;EACA,MAAM,CAACa,IAAD,IAASV,IAAI,CAACW,OAAL,EAAf;EACA,MAAMC,MAAM,GAAGd,SAAS,EAAxB;;EACA,MAAMe,QAAQ,GAAIC,WAAD,IAAiB;IAChCR,QAAQ,CAACV,IAAI,CAACmB,MAAL,CAAYV,MAAZ,EAAoBW,EAApB,EAAwBF,WAAxB,CAAD,CAAR;EACD,CAFD;;EAGAtB,SAAS,CAAC,MAAM;IACdyB,OAAO,CAACC,GAAR,CAAYX,MAAZ,EADc,CAEd;;IACA,IAAGA,MAAH,EAAW;MACTG,IAAI,CAACS,cAAL,CAAoBZ,MAApB;IACD;;IACDU,OAAO,CAACC,GAAR,CAAYR,IAAZ;EACD,CAPQ,EAON,EAPM,CAAT;EASAlB,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAJ,EAAe;MACbC,IAAI,CAACU,WAAL,GADa,CAEb;MACA;IACD;EACF,CANQ,EAMN,CAACX,SAAD,CANM,CAAT;EASA,oBACE;IAAA,uBACE,QAAC,OAAD;MAAS,SAAS,EAAED,SAApB;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,EAAEE,IAAZ;QAAkB,MAAM,EAAC,UAAzB;QAAoC,QAAQ,EAAEG,QAA9C;QAAA,WACGT,YADH,eAEE,QAAC,IAAD,CAAM,IAAN;UAAA,uBACE,QAAC,MAAD;YAAQ,IAAI,EAAC,SAAb;YAAuB,QAAQ,EAAC,QAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAzCuBF,U;UAELR,W,EACwBC,W,EAC1BK,IAAI,CAACW,O,EACLb,S;;;KALOI,U"},"metadata":{},"sourceType":"module"}