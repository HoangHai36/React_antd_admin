{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\pages\\\\User\\\\Users.jsx\";\nimport React from \"react\";\nimport { Avatar, Tag } from \"antd\";\nimport { IMG_BASE_URL } from \"@/config/serverApiConfig\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport CrudModule from \"@/modules/CrudModule\";\nimport UserForm from \"@/forms/UserForm\";\nimport { formatDatetime } from \"@/utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  const entity = \"users\";\n  const searchConfig = {\n    displayLabels: [\"company\", \"surname\", \"name\"],\n    searchFields: \"company,surname,name\",\n    outputValue: \"_id\"\n  };\n\n  const getColor = type => {\n    if (type) {\n      switch (type) {\n        case \"Học sinh\":\n          return \"#2db7f5\";\n\n        case \"Giáo viên\":\n          return \"#108ee9\";\n\n        case \"Quản lý\":\n          return \"#f50\";\n\n        case \"active\":\n        case \"Đang hoạt động\":\n          return \"#87d068\";\n\n        case \"inactive\":\n        case \"Bị khóa\":\n          return \"red\";\n      }\n    }\n  };\n\n  const panelTitle = \"Customer Panel\";\n  const dataTableTitle = \"Customers Lists\";\n  const entityDisplayLabels = [\"company\"];\n  const readColumns = [];\n  const dataTableColumns = [{\n    title: \"Ảnh đại diện\",\n    dataIndex: \"anh_dai_dien\",\n    render: anh_dai_dien => {\n      return /*#__PURE__*/_jsxDEV(Avatar, {\n        style: {\n          float: \"left\"\n        },\n        src: IMG_BASE_URL + anh_dai_dien,\n        shape: \"square\",\n        size: 60,\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"E-mail\",\n    dataIndex: \"email\",\n    sorter: {\n      compare: (a, b) => a.email.localeCompare(b.email),\n      multiple: 2\n    }\n  }, {\n    title: \"Nhóm tài khoản\",\n    dataIndex: \"nhom_nhan_vien\",\n    render: nhom_nhan_vien => {\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: getColor(nhom_nhan_vien === null || nhom_nhan_vien === void 0 ? void 0 : nhom_nhan_vien.ten_nhom),\n        children: nhom_nhan_vien === null || nhom_nhan_vien === void 0 ? void 0 : nhom_nhan_vien.ten_nhom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this);\n    },\n    ellipsis: true\n  }, {\n    title: \"Tên đăng nhập\",\n    dataIndex: \"ten_tai_khoan\",\n    sorter: {\n      compare: (a, b) => {\n        return a.ten_tai_khoan.localeCompare(b.ten_tai_khoan);\n      },\n      multiple: 1\n    },\n    ellipsis: true\n  }, {\n    title: \"Họ và tên\",\n    dataIndex: \"ten_nhan_vien\",\n    sorter: {\n      compare: (a, b) => {\n        return a.ten_nhan_vien.localeCompare(b.ten_nhan_vien);\n      },\n      multiple: 3\n    },\n    ellipsis: true\n  }, {\n    title: \"Trạng thái\",\n    dataIndex: \"trang_thai\",\n    render: trang_thai => {\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: getColor(trang_thai),\n        children: trang_thai == \"active\" || trang_thai == \"Đang hoạt động\" ? \"Đang hoạt động\" : \"Bị khóa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this);\n    },\n    sorter: {\n      compare: (a, b) => {\n        return a.trang_thai.localeCompare(b.trang_thai);\n      },\n      multiple: 4\n    }\n  }, {\n    title: \"Ngày tạo\",\n    dataIndex: \"ngay_tao\",\n    render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        wordWrap: \"break-word\",\n        wordBreak: \"break-word\"\n      },\n      children: formatDatetime(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this),\n    ellipsis: true,\n    sorter: {\n      compare: (a, b) => {\n        return a.ngay_tao.localeCompare(b.ngay_tao);\n      },\n      multiple: 5\n    }\n  }];\n  const ADD_NEW_ENTITY = \"Add new customer\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ADD_NEW_ENTITY,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels\n  };\n  return /*#__PURE__*/_jsxDEV(CrudModule, {\n    createForm: /*#__PURE__*/_jsxDEV(UserForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }, this),\n    updateForm: /*#__PURE__*/_jsxDEV(UserForm, {\n      isUpdateForm: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }, this),\n    config: config\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","Avatar","Tag","IMG_BASE_URL","UserOutlined","CrudModule","UserForm","formatDatetime","Users","entity","searchConfig","displayLabels","searchFields","outputValue","getColor","type","panelTitle","dataTableTitle","entityDisplayLabels","readColumns","dataTableColumns","title","dataIndex","render","anh_dai_dien","float","sorter","compare","a","b","email","localeCompare","multiple","nhom_nhan_vien","ten_nhom","ellipsis","ten_tai_khoan","ten_nhan_vien","trang_thai","date","wordWrap","wordBreak","ngay_tao","ADD_NEW_ENTITY","config"],"sources":["D:/mock-reactjs/frontend-new/src/pages/User/Users.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Avatar, Tag } from \"antd\";\r\nimport { IMG_BASE_URL } from \"@/config/serverApiConfig\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport CrudModule from \"@/modules/CrudModule\";\r\nimport UserForm from \"@/forms/UserForm\";\r\nimport { formatDatetime } from \"@/utils/helpers\";\r\n\r\nfunction Users() {\r\n  const entity = \"users\";\r\n  const searchConfig = {\r\n    displayLabels: [\"company\", \"surname\", \"name\"],\r\n    searchFields: \"company,surname,name\",\r\n    outputValue: \"_id\",\r\n  };\r\n  const getColor = (type) => {\r\n    if(type) {\r\n      switch(type) {\r\n        case \"Học sinh\":  \r\n          return \"#2db7f5\";\r\n        case \"Giáo viên\": \r\n          return \"#108ee9\";\r\n        case \"Quản lý\": \r\n          return \"#f50\";\r\n        case \"active\": \r\n        case \"Đang hoạt động\":\r\n          return \"#87d068\";\r\n        case \"inactive\": \r\n        case \"Bị khóa\":\r\n          return \"red\";          \r\n      }\r\n    }\r\n  }\r\n  const panelTitle = \"Customer Panel\";\r\n  const dataTableTitle = \"Customers Lists\";\r\n  const entityDisplayLabels = [\"company\"];\r\n\r\n  const readColumns = [];\r\n  const dataTableColumns = [\r\n    {\r\n      title: \"Ảnh đại diện\",\r\n      dataIndex: \"anh_dai_dien\",\r\n      render: (anh_dai_dien) => {\r\n        return (\r\n          <Avatar\r\n            style={{ float: \"left\" }}\r\n            src={IMG_BASE_URL + anh_dai_dien}\r\n            shape=\"square\"\r\n            size={60}\r\n            icon={<UserOutlined />}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"E-mail\",\r\n      dataIndex: \"email\",\r\n      sorter: {\r\n        compare: (a, b) => a.email.localeCompare(b.email),\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      title: \"Nhóm tài khoản\",\r\n      dataIndex: \"nhom_nhan_vien\",\r\n      render: (nhom_nhan_vien) => {\r\n       return <Tag color={getColor(nhom_nhan_vien?.ten_nhom)}>{nhom_nhan_vien?.ten_nhom}</Tag>;\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Tên đăng nhập\",\r\n      dataIndex: \"ten_tai_khoan\",\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.ten_tai_khoan.localeCompare(b.ten_tai_khoan);\r\n        },\r\n        multiple: 1,\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Họ và tên\",\r\n      dataIndex: \"ten_nhan_vien\",\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.ten_nhan_vien.localeCompare(b.ten_nhan_vien);\r\n        },\r\n        multiple: 3,\r\n      },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"trang_thai\",\r\n      render: (trang_thai) => {\r\n        return <Tag color={getColor(trang_thai)}>{(trang_thai == \"active\" || trang_thai == \"Đang hoạt động\") ? \"Đang hoạt động\" : \"Bị khóa\"}</Tag>;\r\n       },\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.trang_thai.localeCompare(b.trang_thai);\r\n        },\r\n        multiple: 4,\r\n      },\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"ngay_tao\",\r\n      render: (date) => (\r\n        <span style={{ wordWrap: \"break-word\", wordBreak: \"break-word\" }}>\r\n          {formatDatetime(date)}\r\n        </span>\r\n      ),\r\n      ellipsis: true,\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          return a.ngay_tao.localeCompare(b.ngay_tao);\r\n        },\r\n        multiple: 5,\r\n      },\r\n    },\r\n    ];\r\n  const ADD_NEW_ENTITY = \"Add new customer\";\r\n  const config = {\r\n    entity,\r\n    panelTitle,\r\n    dataTableTitle,\r\n    ADD_NEW_ENTITY,\r\n    readColumns,\r\n    dataTableColumns,\r\n    searchConfig,\r\n    entityDisplayLabels,\r\n  };\r\n  return (\r\n    <CrudModule\r\n      createForm={<UserForm />}\r\n      updateForm={<UserForm isUpdateForm={true} />}\r\n      config={config}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}