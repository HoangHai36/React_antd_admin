{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\UpdateForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\nimport { useParams } from 'react-router-dom';\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateForm(_ref) {\n  _s();\n\n  let {\n    config,\n    formElements\n  } = _ref;\n  let {\n    entity\n  } = config;\n  const dispatch = useDispatch();\n  const {\n    current,\n    isLoading,\n    isSuccess\n  } = useSelector(selectUpdatedItem);\n  const [form] = Form.useForm();\n\n  const onSubmit = fieldsValue => {\n    // if (fieldsValue) {\n    //   if (fieldsValue.birthday) {\n    //     fieldsValue = {\n    //       ...fieldsValue,\n    //       birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n    //     };\n    //   }\n    //   if (fieldsValue.date) {\n    //     fieldsValue = {\n    //       ...fieldsValue,\n    //       birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n    //     };\n    //   }\n    // }\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n  useEffect(() => {\n    if (isSuccess) {\n      form.resetFields(); // dispatch(crud.resetAction(\"update\"));\n      // dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: isLoading,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: onSubmit,\n        children: [formElements, /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateForm, \"Dfs6CSKQImDr25hOw3EUoptOvlo=\", false, function () {\n  return [useDispatch, useSelector, Form.useForm];\n});\n\n_c = UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["React","useEffect","dayjs","useDispatch","useSelector","crud","useCrudContext","selectUpdatedItem","useParams","Button","Form","Loading","UpdateForm","config","formElements","entity","dispatch","current","isLoading","isSuccess","form","useForm","onSubmit","fieldsValue","id","_id","update","list","birthday","date","setFieldsValue","resetFields"],"sources":["D:/mock-reactjs/frontend-new/src/components/UpdateForm/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Form } from \"antd\";\r\nimport Loading from \"@/components/Loading\";\r\n\r\nexport default function UpdateForm({ config, formElements }) {\r\n  let { entity } = config;\r\n  const dispatch = useDispatch();\r\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (fieldsValue) => {\r\n    // if (fieldsValue) {\r\n    //   if (fieldsValue.birthday) {\r\n    //     fieldsValue = {\r\n    //       ...fieldsValue,\r\n    //       birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\r\n    //     };\r\n    //   }\r\n    //   if (fieldsValue.date) {\r\n    //     fieldsValue = {\r\n    //       ...fieldsValue,\r\n    //       birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\r\n    //     };\r\n    //   }\r\n    // }\r\n\r\n    const id = current._id;\r\n    dispatch(crud.update(entity, id, fieldsValue));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(crud.list(entity));\r\n    if (current) {\r\n      if (current.birthday) {\r\n        current.birthday = dayjs(current.birthday);\r\n      }\r\n      if (current.date) {\r\n        current.date = dayjs(current.date);\r\n      }\r\n      form.setFieldsValue(current);\r\n    }\r\n  }, [current]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      form.resetFields();\r\n      // dispatch(crud.resetAction(\"update\"));\r\n      // dispatch(crud.list(entity));\r\n    }\r\n  }, [isSuccess]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Loading isLoading={isLoading}>\r\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n          {formElements}\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Loading>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,eAAe,SAASC,UAAT,OAA8C;EAAA;;EAAA,IAA1B;IAAEC,MAAF;IAAUC;EAAV,CAA0B;EAC3D,IAAI;IAAEC;EAAF,IAAaF,MAAjB;EACA,MAAMG,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAM;IAAEc,OAAF;IAAWC,SAAX;IAAsBC;EAAtB,IAAoCf,WAAW,CAACG,iBAAD,CAArD;EACA,MAAM,CAACa,IAAD,IAASV,IAAI,CAACW,OAAL,EAAf;;EAEA,MAAMC,QAAQ,GAAIC,WAAD,IAAiB;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,EAAE,GAAGP,OAAO,CAACQ,GAAnB;IACAT,QAAQ,CAACX,IAAI,CAACqB,MAAL,CAAYX,MAAZ,EAAoBS,EAApB,EAAwBD,WAAxB,CAAD,CAAR;EACD,CAlBD;;EAmBAtB,SAAS,CAAC,MAAM;IACde,QAAQ,CAACX,IAAI,CAACsB,IAAL,CAAUZ,MAAV,CAAD,CAAR;;IACA,IAAIE,OAAJ,EAAa;MACX,IAAIA,OAAO,CAACW,QAAZ,EAAsB;QACpBX,OAAO,CAACW,QAAR,GAAmB1B,KAAK,CAACe,OAAO,CAACW,QAAT,CAAxB;MACD;;MACD,IAAIX,OAAO,CAACY,IAAZ,EAAkB;QAChBZ,OAAO,CAACY,IAAR,GAAe3B,KAAK,CAACe,OAAO,CAACY,IAAT,CAApB;MACD;;MACDT,IAAI,CAACU,cAAL,CAAoBb,OAApB;IACD;EACF,CAXQ,EAWN,CAACA,OAAD,CAXM,CAAT;EAaAhB,SAAS,CAAC,MAAM;IACd,IAAIkB,SAAJ,EAAe;MACbC,IAAI,CAACW,WAAL,GADa,CAEb;MACA;IACD;EACF,CANQ,EAMN,CAACZ,SAAD,CANM,CAAT;EASA,oBACE;IAAA,uBACE,QAAC,OAAD;MAAS,SAAS,EAAED,SAApB;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,EAAEE,IAAZ;QAAkB,MAAM,EAAC,UAAzB;QAAoC,QAAQ,EAAEE,QAA9C;QAAA,WACGR,YADH,eAEE,QAAC,IAAD,CAAM,IAAN;UAAA,uBACE,QAAC,MAAD;YAAQ,IAAI,EAAC,SAAb;YAAuB,QAAQ,EAAC,QAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA7DuBF,U;UAELT,W,EACyBC,W,EAC3BM,IAAI,CAACW,O;;;KAJET,U"},"metadata":{},"sourceType":"module"}