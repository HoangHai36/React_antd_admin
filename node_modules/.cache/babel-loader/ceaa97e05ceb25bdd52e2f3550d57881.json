{"ast":null,"code":"import { notification } from \"antd\";\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = function (response) {\n  let typeNotification = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!response.data) {\n    response = { ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null\n      }\n    };\n  }\n\n  const {\n    data\n  } = response;\n\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const {\n      status\n    } = response;\n    notification.config({\n      duration: 20\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText\n    });\n  } else {\n    if ((typeNotification === null || typeNotification === void 0 ? void 0 : typeNotification.type) == \"userAdd\") {\n      notification.config({\n        duration: 20\n      });\n      notification.success({\n        message: 'Thêm thành viên thành công'\n      });\n      history.push(\"/user/edit/\" + (data === null || data === void 0 ? void 0 : data.nhan_vien_id));\n    }\n  }\n\n  return data;\n};\n\nexport default successHandler;","map":{"version":3,"names":["notification","codeMessage","successHandler","response","typeNotification","data","status","url","success","result","message","errorText","config","duration","error","description","type","history","push","nhan_vien_id"],"sources":["D:/mock-reactjs/frontend-new/src/request/successHandler.js"],"sourcesContent":["import { notification } from \"antd\";\r\n\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst successHandler = (response, typeNotification = {}) => {\r\n  if (!response.data) {\r\n    response = {\r\n      ...response,\r\n      status: 404,\r\n      url: null,\r\n      data: {\r\n        success: false,\r\n        result: null,\r\n      },\r\n    };\r\n  }\r\n  const { data } = response;\r\n  if (data.success === false) {\r\n    const message = data && data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n  } else {\r\n    if(typeNotification?.type == \"userAdd\") {\r\n      notification.config({\r\n        duration: 20,\r\n      });\r\n      notification.success({\r\n        message: 'Thêm thành viên thành công',\r\n      });\r\n      history.push(\"/user/edit/\" + data?.nhan_vien_id);\r\n    }\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport default successHandler;\r\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,MAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,cAAc,GAAG,UAACC,QAAD,EAAqC;EAAA,IAA1BC,gBAA0B,uEAAP,EAAO;;EAC1D,IAAI,CAACD,QAAQ,CAACE,IAAd,EAAoB;IAClBF,QAAQ,GAAG,EACT,GAAGA,QADM;MAETG,MAAM,EAAE,GAFC;MAGTC,GAAG,EAAE,IAHI;MAITF,IAAI,EAAE;QACJG,OAAO,EAAE,KADL;QAEJC,MAAM,EAAE;MAFJ;IAJG,CAAX;EASD;;EACD,MAAM;IAAEJ;EAAF,IAAWF,QAAjB;;EACA,IAAIE,IAAI,CAACG,OAAL,KAAiB,KAArB,EAA4B;IAC1B,MAAME,OAAO,GAAGL,IAAI,IAAIA,IAAI,CAACK,OAA7B;IACA,MAAMC,SAAS,GAAGD,OAAO,IAAIT,WAAW,CAACE,QAAQ,CAACG,MAAV,CAAxC;IACA,MAAM;MAAEA;IAAF,IAAaH,QAAnB;IACAH,YAAY,CAACY,MAAb,CAAoB;MAClBC,QAAQ,EAAE;IADQ,CAApB;IAGAb,YAAY,CAACc,KAAb,CAAmB;MACjBJ,OAAO,EAAG,iBAAgBJ,MAAO,EADhB;MAEjBS,WAAW,EAAEJ;IAFI,CAAnB;EAID,CAXD,MAWO;IACL,IAAG,CAAAP,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEY,IAAlB,KAA0B,SAA7B,EAAwC;MACtChB,YAAY,CAACY,MAAb,CAAoB;QAClBC,QAAQ,EAAE;MADQ,CAApB;MAGAb,YAAY,CAACQ,OAAb,CAAqB;QACnBE,OAAO,EAAE;MADU,CAArB;MAGAO,OAAO,CAACC,IAAR,CAAa,iBAAgBb,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEc,YAAtB,CAAb;IACD;EACF;;EAED,OAAOd,IAAP;AACD,CArCD;;AAuCA,eAAeH,cAAf"},"metadata":{},"sourceType":"module"}