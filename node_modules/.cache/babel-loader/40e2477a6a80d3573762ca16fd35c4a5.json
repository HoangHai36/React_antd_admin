{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale-provider/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n\n  return Array.isArray(val) ? val : [val];\n}\n\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(function () {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copied = _React$useState2[0],\n      setCopied = _React$useState2[1];\n\n  var copyIdRef = React.useRef();\n  var copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  var cleanCopyId = function cleanCopyId() {\n    clearTimeout(copyIdRef.current);\n  };\n\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []); // ========================== Ellipsis ==========================\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLineClampSupport = _React$useState4[0],\n      setIsLineClampSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isTextOverflowSupport = _React$useState6[0],\n      setIsTextOverflowSupport = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isJsEllipsis = _React$useState10[0],\n      setIsJsEllipsis = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isNativeEllipsis = _React$useState12[0],\n      setIsNativeEllipsis = _React$useState12[1];\n\n  var _React$useState13 = React.useState(true),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isNativeVisible = _React$useState14[0],\n      setIsNativeVisible = _React$useState14[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      !mergedEnableEllipsis || // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      ellipsisWidth = _React$useState16[0],\n      setEllipsisWidth = _React$useState16[1];\n\n  var _React$useState17 = React.useState(0),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      ellipsisFontSize = _React$useState18[0],\n      setEllipsisFontSize = _React$useState18[1];\n\n  var onResize = function onResize(_ref2, element) {\n    var offsetWidth = _ref2.offsetWidth;\n\n    var _a;\n\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  var tooltipProps = {};\n\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (_typeof(ellipsisConfig.tooltip) === 'object') {\n    tooltipProps = _extends({\n      title: children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(_typeof(val));\n    };\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || textLocale.edit;\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n        icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    var systemStr = copied ? textLocale.copied : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, _extends({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      style: _extends(_extends({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : null,\n      \"aria-label\": topAriaLabel,\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      fontSize: ellipsisFontSize,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"names":["_defineProperty","_extends","_typeof","_slicedToArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckOutlined","CopyOutlined","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","React","ConfigContext","useLocaleReceiver","TransButton","isStyleSupport","Tooltip","Editable","useMergedConfig","useUpdatedEffect","Typography","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","del","strong","keyboard","italic","currentContent","wrap","needed","tag","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","_React$useContext","useContext","getPrefixCls","direction","textLocale","typographyRef","useRef","editIconRef","textProps","_useMergedConfig","_useMergedConfig2","enableEdit","editConfig","_useMergedState","value","editing","_useMergedState2","setEditing","_editConfig$triggerTy","triggerType","triggerEdit","edit","_a","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","_useMergedConfig3","_useMergedConfig4","enableCopy","copyConfig","_React$useState","useState","_React$useState2","copied","setCopied","copyIdRef","copyOptions","format","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","_React$useState3","_React$useState4","isLineClampSupport","setIsLineClampSupport","_React$useState5","_React$useState6","isTextOverflowSupport","setIsTextOverflowSupport","_React$useState7","_React$useState8","expanded","setExpanded","_React$useState9","_React$useState10","isJsEllipsis","setIsJsEllipsis","_React$useState11","_React$useState12","isNativeEllipsis","setIsNativeEllipsis","_React$useState13","_React$useState14","isNativeVisible","setIsNativeVisible","_useMergedConfig5","expandable","_useMergedConfig6","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","_ellipsisConfig$rows","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","_React$useState15","_React$useState16","ellipsisWidth","setEllipsisWidth","_React$useState17","_React$useState18","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","window","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","concat","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","_classNames","enabledEllipsis","isEllipsis","WebkitLineClamp","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"sources":["D:/mock-reactjs/frontend-new/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale-provider/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n    code = _ref.code,\n    underline = _ref.underline,\n    del = _ref[\"delete\"],\n    strong = _ref.strong,\n    keyboard = _ref.keyboard,\n    italic = _ref.italic;\n  var currentContent = content;\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    type = props.type,\n    disabled = props.disabled,\n    children = props.children,\n    ellipsis = props.ellipsis,\n    editable = props.editable,\n    copyable = props.copyable,\n    component = props.component,\n    title = props.title,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  var _useMergedConfig = useMergedConfig(editable),\n    _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n    enableEdit = _useMergedConfig2[0],\n    editConfig = _useMergedConfig2[1];\n  var _useMergedState = useMergedState(false, {\n      value: editConfig.editing\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    editing = _useMergedState2[0],\n    setEditing = _useMergedState2[1];\n  var _editConfig$triggerTy = editConfig.triggerType,\n    triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(function () {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  var onEditChange = function onEditChange(value) {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  var onEditCancel = function onEditCancel() {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  var _useMergedConfig3 = useMergedConfig(copyable),\n    _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n    enableCopy = _useMergedConfig4[0],\n    copyConfig = _useMergedConfig4[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    copied = _React$useState2[0],\n    setCopied = _React$useState2[1];\n  var copyIdRef = React.useRef();\n  var copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  var cleanCopyId = function cleanCopyId() {\n    clearTimeout(copyIdRef.current);\n  };\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []);\n  // ========================== Ellipsis ==========================\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isLineClampSupport = _React$useState4[0],\n    setIsLineClampSupport = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isTextOverflowSupport = _React$useState6[0],\n    setIsTextOverflowSupport = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    expanded = _React$useState8[0],\n    setExpanded = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    isJsEllipsis = _React$useState10[0],\n    setIsJsEllipsis = _React$useState10[1];\n  var _React$useState11 = React.useState(false),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    isNativeEllipsis = _React$useState12[0],\n    setIsNativeEllipsis = _React$useState12[1];\n  var _React$useState13 = React.useState(true),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    isNativeVisible = _React$useState14[0],\n    setIsNativeVisible = _React$useState14[1];\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n      expandable: false\n    }),\n    _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n    enableEllipsis = _useMergedConfig6[0],\n    ellipsisConfig = _useMergedConfig6[1];\n  var mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n    rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (\n      // Disable ellipsis\n      !mergedEnableEllipsis ||\n      // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n      // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  var _React$useState15 = React.useState(0),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    ellipsisWidth = _React$useState16[0],\n    setEllipsisWidth = _React$useState16[1];\n  var _React$useState17 = React.useState(0),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    ellipsisFontSize = _React$useState18[0],\n    setEllipsisFontSize = _React$useState18[1];\n  var onResize = function onResize(_ref2, element) {\n    var offsetWidth = _ref2.offsetWidth;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  var tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (_typeof(ellipsisConfig.tooltip) === 'object') {\n    tooltipProps = _extends({\n      title: children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(_typeof(val));\n    };\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n      symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n      tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || textLocale.edit;\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n      icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    var systemStr = copied ? textLocale.copied : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, _extends({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      style: _extends(_extends({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : null,\n      \"aria-label\": topAriaLabel,\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      fontSize: ellipsisFontSize,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module"}