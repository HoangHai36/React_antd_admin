{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\DataTablePost\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crudPost } from \"@/redux/crudPost/actions\";\nimport { selectListItems, selectListCategotyItems } from \"@/redux/crudPost/selectors\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataTablePost(_ref) {\n  _s();\n\n  let {\n    config,\n    DropDownRowMenu,\n    AddNewItem\n  } = _ref;\n  let {\n    entity,\n    dataTableColumns,\n    dataTableTitle\n  } = config;\n  dataTableColumns = [...dataTableColumns, {\n    title: \"\",\n    render: row => /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: DropDownRowMenu({\n        row\n      }),\n      trigger: [\"click\"],\n      children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {\n        style: {\n          cursor: \"pointer\",\n          fontSize: \"24px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }];\n  const {\n    result: listResult,\n    isLoading: listIsLoading\n  } = useSelector(selectListItems);\n  const listCategory = useSelector(selectListCategotyItems);\n\n  const selectItemCategory = itemId => {\n    var _listCategory$result, _listCategory$result$;\n\n    const item = listCategory === null || listCategory === void 0 ? void 0 : (_listCategory$result = listCategory.result) === null || _listCategory$result === void 0 ? void 0 : (_listCategory$result$ = _listCategory$result.items) === null || _listCategory$result$ === void 0 ? void 0 : _listCategory$result$.find(item => item.nhom_tin_tuc_id === itemId);\n    return item === null || item === void 0 ? void 0 : item.ten_nhom;\n  };\n\n  const mapData = () => {\n    const data = [];\n    listResult.items.forEach(item => {\n      item.nhom_tin_tuc_id = selectItemCategory(item.nhom_tin_tuc_id);\n      data.push(item);\n    });\n    return data;\n  };\n\n  const {\n    pagination,\n    items\n  } = listResult;\n  const dispatch = useDispatch();\n  const handelDataTableLoad = useCallback(pagination => {\n    dispatch(crudPost.list(entity, pagination.current));\n  }, []);\n  useEffect(() => {\n    dispatch(crudPost.list(entity));\n    dispatch(crudPost.listCategory('postCategories'));\n    items = mapData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: dataTableTitle,\n      ghost: false,\n      extra: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handelDataTableLoad,\n        children: \"Refresh\"\n      }, `${uniqueId()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddNewItem, {\n        config: config\n      }, `${uniqueId()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)],\n      style: {\n        padding: \"20px 0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: dataTableColumns,\n      rowKey: () => `${uniqueId()}`,\n      dataSource: items,\n      pagination: pagination,\n      loading: listIsLoading,\n      onChange: handelDataTableLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DataTablePost, \"3BQ0xMkxCmqaKtevV03SmTYtHPo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = DataTablePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTablePost\");","map":{"version":3,"names":["React","useCallback","useEffect","Dropdown","Button","PageHeader","Table","EllipsisOutlined","useSelector","useDispatch","crudPost","selectListItems","selectListCategotyItems","uniqueId","DataTablePost","config","DropDownRowMenu","AddNewItem","entity","dataTableColumns","dataTableTitle","title","render","row","cursor","fontSize","result","listResult","isLoading","listIsLoading","listCategory","selectItemCategory","itemId","item","items","find","nhom_tin_tuc_id","ten_nhom","mapData","data","forEach","push","pagination","dispatch","handelDataTableLoad","list","current","padding"],"sources":["D:/mock-reactjs/frontend-new/src/components/DataTablePost/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { crudPost } from \"@/redux/crudPost/actions\";\r\nimport { selectListItems, selectListCategotyItems } from \"@/redux/crudPost/selectors\";\r\n\r\nimport uniqueId from \"@/utils/uinqueId\";\r\n\r\nexport default function DataTablePost({ config, DropDownRowMenu, AddNewItem }) {\r\n  let { entity, dataTableColumns, dataTableTitle } = config;\r\n  dataTableColumns = [\r\n    ...dataTableColumns,\r\n    {\r\n      title: \"\",\r\n      render: (row) => (\r\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\r\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\r\n    selectListItems\r\n  );\r\n  const listCategory = useSelector(\r\n    selectListCategotyItems\r\n  );\r\n  const selectItemCategory = (itemId) => {\r\n    const item =  listCategory?.result?.items?.find((item) => item.nhom_tin_tuc_id === itemId);\r\n    return item?.ten_nhom;\r\n  }\r\n  const mapData = () => {\r\n    const data = [];\r\n     listResult.items.forEach(item => {\r\n      item.nhom_tin_tuc_id = selectItemCategory(item.nhom_tin_tuc_id);\r\n      data.push(item);\r\n    })\r\n    return data;\r\n  }\r\n  const { pagination, items } = listResult;\r\n  const dispatch = useDispatch();\r\n  const handelDataTableLoad = useCallback((pagination) => {\r\n    dispatch(crudPost.list(entity, pagination.current));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(crudPost.list(entity));\r\n    dispatch(crudPost.listCategory('postCategories'));\r\n    items = mapData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={dataTableTitle}\r\n        ghost={false}\r\n        extra={[\r\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\r\n            Refresh\r\n          </Button>,\r\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\r\n        ]}\r\n        style={{\r\n          padding: \"20px 0px\",\r\n        }}\r\n      ></PageHeader>\r\n      <Table\r\n        columns={dataTableColumns}\r\n        rowKey={() => `${uniqueId()}`}\r\n        dataSource={items}\r\n        pagination={pagination}\r\n        loading={listIsLoading}\r\n        onChange={handelDataTableLoad}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}