{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\CreateFormNew\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\nimport { formatDate } from \"@/utils/helpers\";\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateFormNew(_ref) {\n  _s();\n\n  let {\n    config,\n    formElements\n  } = _ref;\n  let {\n    entity\n  } = config;\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    isSuccess\n  } = useSelector(selectCreatedItem);\n  const [editorState, setEditorState] = React.useState(() => EditorState.createEmpty());\n  const [form] = Form.useForm();\n\n  const onSubmit = fieldsValue => {\n    const today = new Date();\n    console.log(fieldsValue);\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  const focusEditor = () => {\n    editor.current.focus();\n  };\n\n  console.log(editorState);\n  const editor = React.useRef(null); // useEffect(() => {\n  //   if (isSuccess) {\n  //     dispatch(crud.resetAction(\"create\"));\n  //     dispatch(crud.list(entity));\n  //   }\n  // }, [isSuccess]);\n\n  return /*#__PURE__*/_jsxDEV(Loading, {\n    isLoading: isLoading,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onSubmit,\n      children: [formElements, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          minHeight: \"6em\",\n          cursor: \"text\"\n        },\n        onClick: focusEditor,\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          ref: editor,\n          editorState: editorState,\n          onChange: setEditorState,\n          placeholder: \"Write something!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateFormNew, \"bI6b8oYuANTqa638b/3Uvn/U6eE=\", false, function () {\n  return [useDispatch, useSelector, Form.useForm];\n});\n\n_c = CreateFormNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateFormNew\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","crud","useCrudContext","selectCreatedItem","formatDate","Button","Form","Loading","Editor","EditorState","CreateFormNew","config","formElements","entity","dispatch","isLoading","isSuccess","editorState","setEditorState","createEmpty","form","useForm","onSubmit","fieldsValue","today","Date","console","log","create","focusEditor","editor","current","focus","useRef","border","minHeight","cursor"],"sources":["D:/mock-reactjs/frontend-new/src/components/CreateFormNew/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\r\nimport { formatDate } from \"@/utils/helpers\";\r\nimport { Button, Form } from \"antd\";\r\nimport Loading from \"@/components/Loading\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nexport default function CreateFormNew({ config, formElements }) {\r\n  let { entity } = config;\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\r\n  const [editorState, setEditorState] = React.useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [form] = Form.useForm();\r\n  const onSubmit = (fieldsValue) => {\r\n    const today = new Date();\r\n    console.log(fieldsValue);\r\n    dispatch(crud.create(entity, fieldsValue));\r\n  };\r\n \r\n  const focusEditor = () => {\r\n    editor.current.focus();\r\n  }\r\n  console.log(editorState)\r\n  const editor = React.useRef(null);\r\n  // useEffect(() => {\r\n  //   if (isSuccess) {\r\n  //     dispatch(crud.resetAction(\"create\"));\r\n  //     dispatch(crud.list(entity));\r\n  //   }\r\n  // }, [isSuccess]);\r\n\r\n  return (\r\n    <Loading isLoading={isLoading}>\r\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n        {formElements}\r\n        <div\r\n          style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n          onClick={focusEditor}\r\n        >\r\n        <Editor\r\n          ref={editor}\r\n          editorState={editorState}\r\n          onChange={setEditorState}\r\n          placeholder=\"Write something!\"\r\n        />\r\n      </div>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Loading>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,UAApC;AACA,OAAO,yBAAP;;AAEA,eAAe,SAASC,aAAT,OAAiD;EAAA;;EAAA,IAA1B;IAAEC,MAAF;IAAUC;EAAV,CAA0B;EAC9D,IAAI;IAAEC;EAAF,IAAaF,MAAjB;EACA,MAAMG,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAM;IAAEgB,SAAF;IAAaC;EAAb,IAA2BhB,WAAW,CAACG,iBAAD,CAA5C;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCrB,KAAK,CAACC,QAAN,CAAe,MACnDW,WAAW,CAACU,WAAZ,EADoC,CAAtC;EAGA,MAAM,CAACC,IAAD,IAASd,IAAI,CAACe,OAAL,EAAf;;EACA,MAAMC,QAAQ,GAAIC,WAAD,IAAiB;IAChC,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;IACAC,OAAO,CAACC,GAAR,CAAYJ,WAAZ;IACAT,QAAQ,CAACb,IAAI,CAAC2B,MAAL,CAAYf,MAAZ,EAAoBU,WAApB,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMM,WAAW,GAAG,MAAM;IACxBC,MAAM,CAACC,OAAP,CAAeC,KAAf;EACD,CAFD;;EAGAN,OAAO,CAACC,GAAR,CAAYV,WAAZ;EACA,MAAMa,MAAM,GAAGjC,KAAK,CAACoC,MAAN,CAAa,IAAb,CAAf,CAlB8D,CAmB9D;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,OAAD;IAAS,SAAS,EAAElB,SAApB;IAAA,uBACE,QAAC,IAAD;MAAM,IAAI,EAAEK,IAAZ;MAAkB,MAAM,EAAC,UAAzB;MAAoC,QAAQ,EAAEE,QAA9C;MAAA,WACGV,YADH,eAEE;QACE,KAAK,EAAE;UAAEsB,MAAM,EAAE,iBAAV;UAA6BC,SAAS,EAAE,KAAxC;UAA+CC,MAAM,EAAE;QAAvD,CADT;QAEE,OAAO,EAAEP,WAFX;QAAA,uBAIA,QAAC,MAAD;UACE,GAAG,EAAEC,MADP;UAEE,WAAW,EAAEb,WAFf;UAGE,QAAQ,EAAEC,cAHZ;UAIE,WAAW,EAAC;QAJd;UAAA;UAAA;UAAA;QAAA;MAJA;QAAA;QAAA;QAAA;MAAA,QAFF,eAaE,QAAC,IAAD,CAAM,IAAN;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,SAAb;UAAuB,QAAQ,EAAC,QAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GAjDuBR,a;UAELX,W,EACgBC,W,EAIlBM,IAAI,CAACe,O;;;KAPEX,a"},"metadata":{},"sourceType":"module"}