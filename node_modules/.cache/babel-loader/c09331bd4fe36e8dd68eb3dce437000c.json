{"ast":null,"code":"var _jsxFileName = \"D:\\\\mock-reactjs\\\\frontend-new\\\\src\\\\components\\\\RecentTable\\\\index.jsx\";\nimport React from \"react\";\nimport { Table } from \"antd\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecentTable(_ref) {\n  let { ...props\n  } = _ref;\n  let {\n    entity,\n    dataTableColumns,\n    config\n  } = props;\n  dataTableColumns = [...dataTableColumns];\n  const {\n    result,\n    isLoading,\n    isSuccess\n  } = config;\n\n  const firstFiveItems = () => {\n    if (isSuccess && result) {\n      switch (entity) {\n        case 'NEW_USERS':\n          return result[\"NEW_USERS\"];\n\n        case 'NEW_POSTS':\n          return result[\"NEW_POSTS\"];\n\n        case 'NEW_COURSES':\n          return result[\"NEW_COURSES\"];\n\n        case 'NEW_EXAMS':\n          return result[\"NEW_EXAMS\"];\n      }\n    }\n\n    return [];\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: dataTableColumns,\n      rowKey: () => `${uniqueId()}`,\n      dataSource: isSuccess && firstFiveItems(),\n      pagination: {\n        pageSize: 5\n      },\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = RecentTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentTable\");","map":{"version":3,"names":["React","Table","uniqueId","RecentTable","props","entity","dataTableColumns","config","result","isLoading","isSuccess","firstFiveItems","pageSize"],"sources":["D:/mock-reactjs/frontend-new/src/components/RecentTable/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport uniqueId from \"@/utils/uinqueId\";\r\n\r\nexport default function RecentTable({ ...props }) {\r\n  let { entity, dataTableColumns, config } = props;\r\n  dataTableColumns = [\r\n    ...dataTableColumns\r\n  ];\r\n\r\n  const { result, isLoading, isSuccess } = config;\r\n  const firstFiveItems = () => {\r\n    if(isSuccess && result){\r\n      switch(entity) {\r\n        case 'NEW_USERS':\r\n          return result[\"NEW_USERS\"];\r\n        case 'NEW_POSTS':\r\n          return result[\"NEW_POSTS\"];\r\n        case 'NEW_COURSES':\r\n          return result[\"NEW_COURSES\"];\r\n        case 'NEW_EXAMS':\r\n          return result[\"NEW_EXAMS\"];\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Table\r\n        columns={dataTableColumns}\r\n        rowKey={() => `${uniqueId()}`}\r\n        dataSource={isSuccess && firstFiveItems()}\r\n        pagination={{ pageSize: 5 }}\r\n        loading={isLoading}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,eAAe,SAASC,WAAT,OAAmC;EAAA,IAAd,EAAE,GAAGC;EAAL,CAAc;EAChD,IAAI;IAAEC,MAAF;IAAUC,gBAAV;IAA4BC;EAA5B,IAAuCH,KAA3C;EACAE,gBAAgB,GAAG,CACjB,GAAGA,gBADc,CAAnB;EAIA,MAAM;IAAEE,MAAF;IAAUC,SAAV;IAAqBC;EAArB,IAAmCH,MAAzC;;EACA,MAAMI,cAAc,GAAG,MAAM;IAC3B,IAAGD,SAAS,IAAIF,MAAhB,EAAuB;MACrB,QAAOH,MAAP;QACE,KAAK,WAAL;UACE,OAAOG,MAAM,CAAC,WAAD,CAAb;;QACF,KAAK,WAAL;UACE,OAAOA,MAAM,CAAC,WAAD,CAAb;;QACF,KAAK,aAAL;UACE,OAAOA,MAAM,CAAC,aAAD,CAAb;;QACF,KAAK,WAAL;UACE,OAAOA,MAAM,CAAC,WAAD,CAAb;MARJ;IAUD;;IACD,OAAO,EAAP;EACD,CAdD;;EAeA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE,QAAC,KAAD;MACE,OAAO,EAAEF,gBADX;MAEE,MAAM,EAAE,MAAO,GAAEJ,QAAQ,EAAG,EAF9B;MAGE,UAAU,EAAEQ,SAAS,IAAIC,cAAc,EAHzC;MAIE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAZ,CAJd;MAKE,OAAO,EAAEH;IALX;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;KAjCuBN,W"},"metadata":{},"sourceType":"module"}