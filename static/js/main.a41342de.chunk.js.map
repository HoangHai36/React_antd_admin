{"version":3,"sources":["request/codeMessage.js","request/errorHandler.js","request/successHandler.js","redux/auth/selectors.js","router/PublicRoute.jsx","components/PageLoader/index.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crudPost/reducer.js","redux/crud/reducer.js","redux/search/types.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","app/index.jsx","hooks/useNetwork/index.jsx","serviceWorker.jsx","index.jsx","redux/crud/types.js","redux/crudPost/types.js","redux/auth/types.js","utils/history.jsx","config/serverApiConfig.js","redux/storePersist.js","auth/auth.service.js","auth/cookie.js"],"names":["codeMessage","errorHandler","error","emptyResult","response","status","message","data","errorText","notification","config","duration","description","jwtExpired","history","push","success","result","successHandler","typeNotification","url","type","nhan_vien_id","authSelect","state","auth","selectAuth","createSelector","current","isLoggedIn","PublicRoute","Component","component","rest","render","props","authService","get","to","motion","div","initial","x","animate","exit","scale","PageLoader","className","size","Login","lazy","NotFound","AuthRouter","location","useLocation","fallback","AnimatePresence","exitBeforeEnter","path","exact","pathname","PrivateRoute","damping","stiffness","transition","y","opacity","Dashboard","Users","UserAdd","UserEdit","UserInfo","Courses","Posts","Logout","Register","AppRouter","Sider","Layout","Menu","SubMenu","Navigation","useState","collapsed","setCollapsed","router","key","getSelectedKeys","itemS","find","item","toString","width","collapsible","onCollapse","style","zIndex","theme","defaultSelectedKeys","mode","Item","icon","DashboardOutlined","UserOutlined","FileTextOutlined","FileSyncOutlined","Router","useSelector","useEffect","console","log","minHeight","INITIAL_STATE","loading","authReducer","action","actionTypes","payload","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","pagination","pageSize","total","listCategory","create","update","delete","read","search","crudReducerPost","keyState","crudReducer","INIT_STATE","RESET_STATE","CURRENT_SELECTED","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","RESET_REF","INITIAL_REF_STATE","selected","searchReducer","newState","map","refKey","appReducer","combineReducers","crud","crudPost","rootReducer","undefined","middleware","createLogger","thunk","configStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","storePersist","store","createStore","App","navigator","onLine","isOnline","setNetwork","useNetwork","title","subTitle","extra","href","Boolean","hostname","match","process","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","CURRENT_ITEM","CURRENT_ACTION","RESET_ACTION","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","createBrowserHistory","REACT_APP_DEV_REMOTE","API_BASE_URL","ACCESS_TOKEN_NAME","IMG_BASE_URL","set","localStorage","setItem","JSON","stringify","getItem","parse","remove","removeItem","getAll","clear","login","loginAdminData","axios","post","token","register","logout","cookieName","getCookie","cookieValue"],"mappings":"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","file":"static/js/main.a41342de.chunk.js","sourcesContent":["const codeMessage = {\r\n  200: \"The server successfully returned the requested data. \",\r\n  201: \"Create or modify data successfully. \",\r\n  202: \"A request has entered the background queue (asynchronous task). \",\r\n  204: \"Delete data successfully. \",\r\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\r\n  401: \"The admin does not have permission please try to login again. \",\r\n  403: \"The admin is authorized, but access is forbidden. \",\r\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\r\n  406: \"The requested format is not available. \",\r\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\r\n  422: \"When creating an object, a validation error occurred. \",\r\n  500: \"An error occurred in the server, please check the server. \",\r\n  502: \"Gateway error. \",\r\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\r\n  504: \"The gateway has timed out. \",\r\n};\r\n\r\nexport default codeMessage;\r\n","import { notification } from \"antd\";\r\nimport history from \"@/utils/history\";\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst errorHandler = (error, emptyResult = null) => {\r\n  const { response } = error;\r\n\r\n  if (!response) {\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.error({\r\n    //   message: \"No internet connection\",\r\n    //   description: \"Cannot connect to the server, Check your internet network\",\r\n    // });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"Cannot connect to the server, Check your internet network\",\r\n    };\r\n  } else if (response && response.status) {\r\n    const message = response.data && response.data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n    if (error.response.data.jwtExpired) {\r\n      history.push(\"/logout\");\r\n    }\r\n    return response.data;\r\n  } else {\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: \"Unknown Error\",\r\n      description: \"An unknown error occurred in the app, please try again. \",\r\n    });\r\n    return {\r\n      success: false,\r\n      result: emptyResult,\r\n      message: \"An unknown error occurred in the app, please try again. \",\r\n    };\r\n  }\r\n};\r\n\r\nexport default errorHandler;\r\n","import { notification } from \"antd\";\r\nimport history from \"@/utils/history\";\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst successHandler = (response, typeNotification = {}) => {\r\n  if (!response.data) {\r\n    response = {\r\n      ...response,\r\n      status: 404,\r\n      url: null,\r\n      data: {\r\n        success: false,\r\n        result: null,\r\n      },\r\n    };\r\n  }\r\n  const { data } = response;\r\n  if (data.success === false) {\r\n    const message = data && data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n  } else {\r\n    if(typeNotification?.type == \"userAdd\") {\r\n      notification.config({\r\n        duration: 20,\r\n      });\r\n      notification.success({\r\n        message: 'Thêm thành viên thành công',\r\n      });\r\n      history.push(\"/user/edit/\" + data?.data?.nhan_vien_id);\r\n    } else if(typeNotification?.type == \"deleteUser\") {\r\n      notification.config({\r\n        duration: 20,\r\n      });\r\n      notification.success({\r\n        message: 'Xóa thành viên thành công',\r\n      });\r\n    } else if(typeNotification?.type == \"lockUser\") {\r\n      notification.config({\r\n        duration: 20,\r\n      });\r\n      notification.success({\r\n        message: 'Lock thành viên thành công',\r\n      });\r\n    } else if(typeNotification?.type == \"userEdit\") {\r\n      notification.config({\r\n        duration: 20,\r\n      });\r\n      notification.success({\r\n        message: 'Update thành viên thành công',\r\n      });\r\n    }\r\n  }\r\n  \r\n  return data;\r\n};\r\n\r\nexport default successHandler;\r\n","import { createSelector } from \"reselect\";\r\nconst authSelect = (state) => state.auth;\r\n\r\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\r\nexport const selectCurrentAdmin = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.current\r\n);\r\n\r\nexport const isLoggedIn = createSelector(\r\n  [authSelect],\r\n  (auth) => auth.isLoggedIn\r\n);\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authService.token.get() ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <motion.div\r\n            initial={{ x: 200 }}\r\n            animate={{ x: 0 }}\r\n            exit={{ scale: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst PageLoader = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\nexport default PageLoader;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\n\r\nconst Login = lazy(() =>\r\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\r\n);\r\n\r\nconst NotFound = lazy(() =>\r\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AuthRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PublicRoute\r\n            path=\"/\"\r\n            component={Login}\r\n            render={() => <Redirect to=\"/login\" />}\r\n          />\r\n          <PublicRoute component={Login} path=\"/login\" exact />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n            render={() => <Redirect to=\"/notfound\" />}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nimport * as authService from \"@/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const location = useLocation();\r\n  const config = {\r\n    type: \"spring\",\r\n    damping: 20,\r\n    stiffness: 100,\r\n  };\r\n  return (\r\n    // Show the component only when the admin is logged in\r\n    // Otherwise, redirect the admin to /signin page\r\n\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        (authService.token.get() || location.pathname == \"/register\") ? (\r\n          <motion.div\r\n            transition={config}\r\n            initial={{ y: 20, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            exit={{ y: -20, opacity: 0 }}\r\n          >\r\n            <Component {...props} />\r\n          </motion.div>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PageLoader from \"@/components/PageLoader\";\r\n\r\nconst Dashboard = lazy(() =>\r\n  import(\"@/pages/Dashboard\")\r\n);\r\nconst Users = lazy(() =>\r\n  import(\"@/pages/User/Users\")\r\n);\r\nconst UserAdd = lazy(() =>\r\n  import(\"@/pages/User/UserAdd\")\r\n);\r\nconst UserEdit = lazy(() =>\r\n  import(\"@/pages/User/UserEdit\")\r\n);\r\nconst UserInfo = lazy(() =>\r\n  import(\"@/pages/User/UserInfo\")\r\n);\r\n\r\nconst Courses = lazy(() => import(\"@/pages/Courses\"));\r\nconst Posts = lazy(() =>\r\n  import(\"@/pages/Posts\")\r\n);\r\n\r\nconst Logout = lazy(() =>\r\n  import(\"@/pages/Logout\")\r\n);\r\nconst Register = lazy(() =>\r\n  import(\"@/pages/Register\")\r\n);\r\nconst NotFound = lazy(() =>\r\n  import(\"@/pages/NotFound\")\r\n);\r\n\r\nexport default function AppRouter() {\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<PageLoader />}>\r\n      <AnimatePresence exitBeforeEnter initial={false}>\r\n        <Switch location={location} key={location.pathname}>\r\n          <PrivateRoute path=\"/\" component={Dashboard} exact />\r\n          <PrivateRoute component={Users} path=\"/users\" exact />\r\n          <PrivateRoute component={UserAdd} path=\"/user/add\" exact />\r\n          <PrivateRoute component={UserInfo} path=\"/user/:id\" exact />\r\n          <PrivateRoute component={UserEdit} path=\"/user/edit/:id\" exact />\r\n          <PrivateRoute component={Courses} path=\"/course\" exact />\r\n          <PrivateRoute component={Posts} path=\"/posts\" exact />\r\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\r\n          <PrivateRoute component={Register} path=\"/register\" exact />\r\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\r\n          <Route\r\n            path=\"*\"\r\n            component={NotFound}\r\n            render={() => <Redirect to=\"/notfound\" />}\r\n          />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  SettingOutlined,\r\n  UserOutlined,\r\n  CustomerServiceOutlined,\r\n  FileTextOutlined,\r\n  FileSyncOutlined,\r\n  DashboardOutlined,\r\n  TeamOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nfunction Navigation() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const location = useLocation();\r\n  const router = [\r\n    {\r\n      key: 1,\r\n      path: '/'\r\n    },\r\n    {\r\n      key: 2,\r\n      path: '/users'\r\n    },\r\n    {\r\n      key: 3,\r\n      path: '/course'\r\n    },\r\n    {\r\n      key: 4,\r\n      path: '/posts'\r\n    }\r\n  ]\r\n  const getSelectedKeys = () => {\r\n    const itemS = router.find((item) => item.path == location.pathname);\r\n    if (itemS) return itemS.key.toString();\r\n    return \"1\";\r\n  }\r\n  getSelectedKeys()\r\n  const onCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return (\r\n    <>\r\n      <Sider\r\n        width={200} \r\n        collapsible\r\n        collapsed={collapsed}\r\n        onCollapse={onCollapse}\r\n        style={{\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[getSelectedKeys()]} mode=\"inline\">\r\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\r\n            <Link to=\"/\" />\r\n            Trang chủ\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n            <Link to=\"/users\">Thành viên</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<FileTextOutlined />}>\r\n            <Link to=\"/course\" />\r\n            Khóa học\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<FileSyncOutlined />}>\r\n            <Link to=\"/posts\" />\r\n            Bài viết\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    </>\r\n  );\r\n}\r\nexport default Navigation;\r\n","// export { default as AuthRouter } from \"./AuthRouter\";\r\n// export { default as AppRouter } from \"./AppRouter\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport Navigation from \"@/layout/Navigation\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAuth } from \"@/redux/auth/selectors\";\r\n\r\nexport default function Router() {\r\n  const location = useLocation();\r\n  const { isLoggedIn } = useSelector(selectAuth);\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn : \", isLoggedIn);\r\n  }, [isLoggedIn]);\r\n\r\n  if (isLoggedIn === false) {\r\n    if(location.pathname == \"/register\") {\r\n      return (\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <AppRouter />\r\n        </Layout>\r\n      );\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <AuthRouter />\r\n      </Layout>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Navigation />\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <AppRouter />\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n// export default App;\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_STATE = {\r\n  current: {},\r\n  loading: false,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  console.log(action.type)\r\n  switch (action.type) {\r\n    case actionTypes.LOADING_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.FAILED_REQUEST:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        current: action.payload,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n      };\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return INITIAL_STATE;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_KEY_STATE = {\r\n  result: null,\r\n  current: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  current: {\r\n    result: null,\r\n  },\r\n  list: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  listCategory: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  create: INITIAL_KEY_STATE,\r\n  update: INITIAL_KEY_STATE,\r\n  delete: INITIAL_KEY_STATE,\r\n  read: INITIAL_KEY_STATE,\r\n  search: { ...INITIAL_KEY_STATE, result: [] },\r\n};\r\n\r\nconst crudReducerPost = (state = INITIAL_STATE, action) => {\r\n  const { payload, keyState } = action;\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n    case actionTypes.CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          result: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: false,\r\n          isSuccess: false,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          result: payload,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n    case actionTypes.CURRENT_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_KEY_STATE,\r\n          current: payload,\r\n        },\r\n      };\r\n    case actionTypes.RESET_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_STATE[keyState],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default crudReducerPost;\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_KEY_STATE = {\r\n  result: null,\r\n  current: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  current: {\r\n    result: null,\r\n  },\r\n  list: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  create: INITIAL_KEY_STATE,\r\n  update: INITIAL_KEY_STATE,\r\n  delete: INITIAL_KEY_STATE,\r\n  read: INITIAL_KEY_STATE,\r\n  search: { ...INITIAL_KEY_STATE, result: [] },\r\n};\r\n\r\nconst crudReducer = (state = INITIAL_STATE, action) => {\r\n  console.log(action)\r\n  const { payload, keyState } = action;\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n    case actionTypes.CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          result: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: false,\r\n          isSuccess: false,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          result: payload,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n    case actionTypes.CURRENT_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_KEY_STATE,\r\n          current: payload,\r\n        },\r\n      };\r\n    case actionTypes.RESET_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_STATE[keyState],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default crudReducer;\r\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\r\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\r\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\r\n\r\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\r\n\r\nexport const RESET_REF = \"SEARCH_RESET_REF\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_REF_STATE = {\r\n  result: [],\r\n  selected: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\nconst INITIAL_STATE = {};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload = null, keyState = null } = action;\r\n  switch (action.type) {\r\n    case actionTypes.INIT_STATE: {\r\n      let newState = {};\r\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n\r\n    case actionTypes.RESET_REF:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n\r\n    case actionTypes.CURRENT_SELECTED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          selected: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: INITIAL_REF_STATE,\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_REF_STATE,\r\n          result: payload,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { reducer as authReducer } from \"./auth\";\r\nimport { reducer as crudReducerPost } from \"./crudPost\";\r\nimport { reducer as crudReducer } from \"./crud\";\r\nimport { reducer as searchReducer } from \"./search\";\r\ncrudReducerPost\r\nimport * as actionTypes from \"./auth/types\";\r\n\r\n// Combine all reducers.\r\n\r\nconst appReducer = combineReducers({\r\n  auth: authReducer,\r\n  crud: crudReducer,\r\n  crudPost: crudReducerPost,\r\n  search: searchReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { legacy_createStore as createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport storePersist from \"./storePersist\";\r\n\r\nconst logger = createLogger();\r\nlet middleware = [thunk];\r\n\r\nlet configStore = applyMiddleware(...middleware);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, logger];\r\n  configStore = composeEnhancers(applyMiddleware(...middleware));\r\n}\r\n\r\nconst initialState = storePersist.get(\"auth\")\r\n  ? { auth: storePersist.get(\"auth\") }\r\n  : {};\r\n\r\nconst store = createStore(rootReducer, initialState, configStore);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState, Suspense } from \"react\";\r\nimport { Router as RouterHistory } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Router from \"@/router\";\r\nimport history from \"@/utils/history\";\r\nimport store from \"@/redux/store\";\r\n\r\nimport { Button, Result } from \"antd\";\r\n\r\nimport useNetwork from \"@/hooks/useNetwork\";\r\n\r\nfunction App() {\r\n  const { isOnline: isNetwork } = useNetwork();\r\n  if (!isNetwork) {\r\n    return (\r\n        <Result\r\n          status=\"404\"\r\n          title=\"No Internet Connection\"\r\n          subTitle=\"Check your Internet Connection or your network.\"\r\n          extra={\r\n            <Button href=\"/\" type=\"primary\">\r\n              Try Again\r\n            </Button>\r\n          }\r\n          />\r\n    );\r\n  } else {\r\n    return (\r\n      <RouterHistory history={history}>\r\n        <Provider store={store}>\r\n          <Router />\r\n        </Provider>\r\n      </RouterHistory>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useNetwork() {\r\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\r\n  useEffect(() => {\r\n    setNetwork(window.navigator.onLine);\r\n  }, [window.navigator.onLine]);\r\n  return { isOnline };\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import \"./index.css\";\r\nimport App from \"./app\"\r\nimport \"./style/app.less\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nconsole.log(\"process env\", process.env.NODE_ENV)\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\r\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\r\n\r\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\r\n\r\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\r\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\r\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\r\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\r\n\r\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\r\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\r\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\r\n\r\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\r\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\r\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\r\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\r\n\r\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\r\n\r\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","console.log(\r\n  \"process env REACT_APP_DEV_REMOTE\",\r\n  process.env.REACT_APP_DEV_REMOTE\r\n)\r\n\r\n// export const API_BASE_URL =\r\n//   process.env.NODE_ENV == \"production\" ||\r\n//   process.env.REACT_APP_DEV_REMOTE == \"remote\"\r\n//     ? \"https://starter-mern.herokuapp.com/api/\"\r\n//     : \"https://starter-mern.herokuapp.com/api/\"\r\n\r\nexport const API_BASE_URL = \"https://exam-dev-api.web5days.com:5001/api/\";\r\nexport const ACCESS_TOKEN_NAME = \"Authorization\"\r\nexport const IMG_BASE_URL = \"https://exam-dev-api.web5days.com:5001/\";\r\n","export const storePersist = {\r\n  set: (key, state) => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  },\r\n  get: (key) => {\r\n    const result = window.localStorage.getItem(key);\r\n    return JSON.parse(result);\r\n  },\r\n  remove: (key) => {\r\n    window.localStorage.removeItem(key);\r\n  },\r\n  getAll: () => {\r\n    return window.localStorage;\r\n  },\r\n  clear: () => {\r\n    window.localStorage.clear();\r\n  },\r\n};\r\n\r\nexport default storePersist;\r\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\n\r\nimport axios from \"axios\";\r\nimport errorHandler from \"@/request/errorHandler\";\r\nimport successHandler from \"@/request/successHandler\";\r\nimport storePersist from \"@/redux/storePersist\";\r\n\r\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\r\n\r\nexport const login = async (loginAdminData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + `user/login`,\r\n      loginAdminData\r\n    );\r\n    token.set(response.data.token);\r\n    return successHandler(response);\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const register = async (loginAdminData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + `user/regUser`,\r\n      loginAdminData\r\n    );\r\n    token.set(response.data.token);\r\n    return successHandler(response);\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  token.remove();\r\n  storePersist.clear();\r\n};\r\n\r\nexport const token = {\r\n  get: () => {\r\n    return getCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n  set: (token) => {\r\n    return setCookie(ACCESS_TOKEN_NAME, token);\r\n  },\r\n  remove: () => {\r\n    return deleteCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n};\r\n","// export function getCookie(cookieName) {\r\n//   let name = cookieName + \"=\";\r\n//   let ca = document.cookie.split(\";\");\r\n//   for (let i = 0; i < ca.length; i++) {\r\n//     let c = ca[i];\r\n//     while (c.charAt(0)===\" \") {\r\n//       c = c.substring(1);\r\n//     }\r\n//     if (c.indexOf(name)===0) {\r\n//       return c.substring(name.length, c.length);\r\n//     }\r\n//   }\r\n//   return \"\";\r\n// }\r\n\r\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\r\n//   let d = new Date();\r\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n//   let expires = \"expires=\" + d.toUTCString();\r\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\r\n// }\r\n\r\n// export function deleteCookie(cookieName) {\r\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\r\n//   return true;\r\n// }\r\n\r\nexport function setCookie(cookieName, cookieValue) {\r\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\r\n}\r\nexport function getCookie(cookieName) {\r\n  const result = window.localStorage.getItem(cookieName);\r\n  return JSON.parse(result);\r\n}\r\nexport function deleteCookie(cookieName) {\r\n  window.localStorage.removeItem(cookieName);\r\n  return true;\r\n}\r\n"],"sourceRoot":""}